src/
  ├── AIStrategies/  # AI 策略模組
  │   ├── MainForceStrategyWithOrderBook.java  # 主力策略，基於訂單簿數據實現主力交易邏輯。
  │   ├── RetailInvestorAI.java               # 散戶 AI，模擬散戶投資者行為的演算法。
  │
  ├── Analysis/  # 分析模組，提供市場行為的數據分析工具
  │   ├── MarketAnalyzer.java  # 市場分析器，用於分析股票市場趨勢與模式。
  │   ├── MarketBehavior.java  # 市場行為記錄器，模擬並記錄市場參與者的行為。
  │   ├── info                 # 包含模組的相關文檔與說明。
  │
  ├── Core/  # 核心模組，包含基礎數據結構與邏輯
  │   ├── Order.java         # 訂單類別，包含訂單的基本屬性（例如 ID、數量、價格等）。
  │   ├── OrderBook.java     # 訂單簿類別，負責管理所有買賣訂單。
  │   ├── Stock.java         # 股票類別，表示單一股票及其屬性（如名稱、代號等）。
  │   ├── Trader.java        # 交易者類別，描述交易者的基本行為與屬性。
  │   ├── info               # 包含模組的相關文檔與說明。
  │
  ├── OrderManagement/  # 訂單管理模組，處理訂單檢視與相關邏輯
  │   ├── CustomOrderViewer.java       # 自定義訂單檢視器，提供特定需求的訂單檢視功能。
  │   ├── NewOrderBookTable.java       # 新版訂單表格，改進 UI 和數據處理性能。
  │   ├── NewOrderViewer.java          # 新版訂單檢視器，增強用戶體驗。
  │   ├── OrderBookListener.java       # 訂單簿監聽器，用於監測訂單簿的變更。
  │   ├── OrderBookTable.java          # 訂單表格，用於顯示訂單數據。
  │   ├── OrderViewer.java             # 訂單檢視器視窗，用於查看不同類型交易者的訂單詳情。
  │
  ├── StockMainAction/  # 模擬運行模組
  │   ├── StockMarketSimulation.java  # 股票市場模擬器，負責模擬市場的動態行為。
  │
  ├── UserManagement/  # 使用者管理模組
  │   ├── UserAccount.java  # 使用者帳戶類別，處理帳戶的屬性與操作。



更新日誌
-----------------------------------------------------------------------------------------------
2024-11-22
主要更新

OrderManagement.OrderViewer.java
界面調整：
增加了窗口大小（調整為 1200x800），以容納更多的表格數據，提升用戶體驗。
確保 JScrollPane 正確設置，允許表格內容滾動顯示，避免因訂單數量過多而影響界面顯示。

OrderManagement.NewOrderBookTable.java
表格模型優化：
確保 NewOrderBookTable 類別的表格模型能夠動態調整行數，顯示所有傳入的訂單數據，無行數限制。
禁止表格單元格編輯，提升數據顯示的穩定性和安全性。

次要更新
界面美化：
調整 OrderViewer 界面佈局，增強視覺效果，提升用戶體驗。
增加不同類型訂單的顏色標識（例如，買單用綠色，賣單用紅色），便於用戶快速識別。
-----------------------------------------------------------------------------------------------

