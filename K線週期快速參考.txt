╔══════════════════════════════════════════════════════════════════════════════╗
║                        K線蠟燭圖時間週期修改快速參考                          ║
╚══════════════════════════════════════════════════════════════════════════════╝

📄 檔案：MainView.java
📍 位置：D:\自動掛單版src\StockMainAction\view\MainView.java

┌──────────────────────────────────────────────────────────────────────────────┐
│  1️⃣  修改可用的週期選項                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

📌 位置：第 210-211 行

    // 秒級週期（10秒、30秒、60秒）
    private final int[] klineSeconds = new int[]{10, 30, 60};
    
    // 分鐘級週期（1分、5分、10分、30分、60分）
    private final int[] klineMinutes = new int[]{1, 5, 10, 30, 60};

💡 範例：新增 5秒、15秒、2分鐘週期

    private final int[] klineSeconds = new int[]{5, 10, 15, 30, 60};
    private final int[] klineMinutes = new int[]{1, 2, 5, 10, 30, 60};

┌──────────────────────────────────────────────────────────────────────────────┐
│  2️⃣  修改預設顯示的週期                                                      │
└──────────────────────────────────────────────────────────────────────────────┘

📌 位置：第 1789-1790 行（在 createCharts() 方法中）

    // 預設使用 10 秒 K 線
    currentKlineMinutes = -10;

⚙️ 規則：
    • 負數 = 秒級週期（例如 -10 = 10秒，-30 = 30秒）
    • 正數 = 分鐘級週期（例如 1 = 1分鐘，5 = 5分鐘）

💡 常用配置：

    currentKlineMinutes = -5;     // 預設 5秒 K線（超短線）
    currentKlineMinutes = -10;    // 預設 10秒 K線（短線）
    currentKlineMinutes = -30;    // 預設 30秒 K線
    currentKlineMinutes = 1;      // 預設 1分鐘 K線（標準）
    currentKlineMinutes = 5;      // 預設 5分鐘 K線（常用）
    currentKlineMinutes = 15;     // 預設 15分鐘 K線
    currentKlineMinutes = 60;     // 預設 1小時 K線（日內波段）

┌──────────────────────────────────────────────────────────────────────────────┐
│  3️⃣  修改K線保留根數（可選）                                                 │
└──────────────────────────────────────────────────────────────────────────────┘

📌 位置：第 1775、1783 行（在 createCharts() 方法中）

    // 秒級K線最大根數
    for (int s : klineSeconds) {
        OHLCSeries srs = new OHLCSeries("K線(" + s + "秒)");
        srs.setMaximumItemCount(30);  // ← 改這裡
    }
    
    // 分鐘級K線最大根數
    for (int m : klineMinutes) {
        OHLCSeries s = new OHLCSeries("K線(" + m + "分)");
        s.setMaximumItemCount(30);  // ← 改這裡
    }

💡 建議配置：

    週期類型        建議根數        適用場景
    ─────────────────────────────────────────
    秒級K線         30-60根         極短線、Scalping
    1-5分鐘         60-100根        短線、當沖
    15-30分鐘       100-200根       波段、日內
    小時級          200-500根       長線、多日

┌──────────────────────────────────────────────────────────────────────────────┐
│  📊 推薦配置範例                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

╔═══════════════════════════════════════════════════════════════════════════╗
║  🎯 當沖交易者（超短線）                                                   ║
╚═══════════════════════════════════════════════════════════════════════════╝

    int[] klineSeconds = new int[]{3, 5, 10, 15, 30};
    int[] klineMinutes = new int[]{1, 2, 3, 5};
    currentKlineMinutes = -5;  // 預設5秒
    
    秒級最大根數：120根
    分鐘級最大根數：60根

╔═══════════════════════════════════════════════════════════════════════════╗
║  📈 短線交易者（日內）                                                     ║
╚═══════════════════════════════════════════════════════════════════════════╝

    int[] klineSeconds = new int[]{10, 30, 60};
    int[] klineMinutes = new int[]{1, 3, 5, 15, 30};
    currentKlineMinutes = 1;  // 預設1分鐘
    
    秒級最大根數：60根
    分鐘級最大根數：100根

╔═══════════════════════════════════════════════════════════════════════════╗
║  📊 波段交易者                                                             ║
╚═══════════════════════════════════════════════════════════════════════════╝

    int[] klineSeconds = new int[]{30, 60};
    int[] klineMinutes = new int[]{5, 15, 30, 60, 120};
    currentKlineMinutes = 15;  // 預設15分鐘
    
    秒級最大根數：30根
    分鐘級最大根數：200根

╔═══════════════════════════════════════════════════════════════════════════╗
║  ⏰ 台股盤中標準配置                                                       ║
╚═══════════════════════════════════════════════════════════════════════════╝

    int[] klineSeconds = new int[]{10, 30, 60};
    int[] klineMinutes = new int[]{1, 5, 15, 30, 60};
    currentKlineMinutes = 1;  // 預設1分鐘
    
    秒級最大根數：60根
    分鐘級最大根數：120根

┌──────────────────────────────────────────────────────────────────────────────┐
│  ⚠️  重要注意事項                                                            │
└──────────────────────────────────────────────────────────────────────────────┘

❗ 週期值規則：
    • 秒級：1 ~ 120 秒（建議不超過60秒）
    • 分鐘級：1 ~ 240 分鐘（1分鐘 ~ 4小時）
    • 小時級：使用60的倍數（60=1小時、120=2小時、240=4小時）

❗ 效能建議：
    • 週期選項不要超過 8 個
    • 秒級K線根數建議 30-120 根
    • 分鐘級K線根數建議 60-200 根
    • 過多根數會影響渲染效能

❗ 記憶體考量：
    • 每增加1個週期 × 100根K線 ≈ 增加約 10-20 KB 記憶體
    • 如果配置8個週期，每個200根 ≈ 約 160-320 KB

❗ 修改後需要：
    ✓ 重新編譯程式
    ✓ 重新啟動應用程式
    ✓ 舊的K線數據會自動清空

┌──────────────────────────────────────────────────────────────────────────────┐
│  🔧 快速修改三步驟                                                           │
└──────────────────────────────────────────────────────────────────────────────┘

    ① 開啟 MainView.java
    
    ② 修改第 210-211 行（可用週期）和第 1790 行（預設週期）
    
    ③ 儲存 → 編譯 → 執行

┌──────────────────────────────────────────────────────────────────────────────┐
│  📚 詳細說明文件                                                             │
└──────────────────────────────────────────────────────────────────────────────┘

    請參考：如何修改K線週期.md

════════════════════════════════════════════════════════════════════════════════

版本：1.0
更新：2025-10-23

